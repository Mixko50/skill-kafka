stages:
  - test
  - build
  - deploy

test-skill-api:
  stage: test
  image: golang:latest
  script:
    - cd api
    - go install
    - make test

test-skill-consumer:
  stage: test
  image: golang:latest
  script:
    - cd consumer
    - go install
    - make test

build-skill-api:
  stage: build
  needs:
    - job: test-skill-api
  image: docker:latest
  # when: manual
  services:
    - docker:dind
  script:
    - docker build -t $SKILL_API_REGISTRIES:$CI_COMMIT_SHORT_SHA -f  ./api/Dockerfile ./api
    - docker tag $SKILL_API_REGISTRIES:$CI_COMMIT_SHORT_SHA $SKILL_API_REGISTRIES:latest
    - docker login $REGISTRIES -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker image push --all-tags $SKILL_API_REGISTRIES

build-skill-consumer:
  stage: build
  needs:
    - job: test-skill-consumer
  image: docker:latest
  # when: manual
  services:
    - docker:dind
  script:
    - docker build -t $SKILL_CONSUMER_REGISTRIES:$CI_COMMIT_SHORT_SHA -f  ./consumer/Dockerfile ./consumer
    - docker tag $SKILL_CONSUMER_REGISTRIES:$CI_COMMIT_SHORT_SHA $SKILL_CONSUMER_REGISTRIES:latest
    - docker login $REGISTRIES -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker image push --all-tags $SKILL_CONSUMER_REGISTRIES